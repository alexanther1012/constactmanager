{"version":3,"sources":["components/test/Test.jsx","components/layout/Header.jsx","context.jsx","components/contacts/Contact.jsx","components/contacts/Contacts.jsx","components/layout/TextInputGroup.jsx","components/contacts/AddContact.jsx","components/contacts/EditContact.jsx","components/pages/About.jsx","components/pages/NotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["Test","state","title","body","fetch","then","response","json","data","setState","this","Component","Header","props","branding","className","to","icon","faHome","style","faPlus","faQuestion","defaultProps","Context","React","createContext","reducer","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","axios","get","res","value","children","Consumer","Contact","showContactInfo","showOnClick","e","deleteOnClick","a","delete","name","email","phone","faSortUp","faSortDown","onClick","cursor","faTimes","float","color","faPencilAlt","Contacts","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","preventDefault","newContact","post","history","push","target","EditContact","match","params","updateContact","put","About","NotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6aab847b.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: '',\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n      .then(response => response.json())\n      .then(data => this.setState({ title: data.title, body: data.body}));\n  }\n\n  // UNSAFE_componentWillMount() {\n  //   console.log(\"componentWillMount...\");\n  // }\n\n  // componentDidUpdate() {\n  //   console.log(\"componentDidUpdate...\");\n  // }\n\n  // UNSAFE_componentWillUpdate() {\n  //   console.log(\"componentWillUpdate...\");\n  // }\n\n  // UNSAFE_componentWillReceiveProps(nextProps, nextState) {\n  //   console.log(\"componentWillReceiveProps...\",nextProps, nextState);\n  // }\n\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   console.log(\"getDerivedStateFromProps...\",nextProps, prevState);\n  // }\n\n  // getSnapshotBeforeUpdate(nextProps, prevState) {\n  //   return {\n  //     test: 'something'\n  //   }\n  // }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    )\n  }\n}\n\nexport default Test;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faPlus, faQuestion} from '@fortawesome/free-solid-svg-icons';\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {branding}\n        </Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <FontAwesomeIcon\n                  icon={faHome}\n                  style={{}} \n                /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <FontAwesomeIcon\n                  icon={faPlus}\n                  style={{}} \n                /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <FontAwesomeIcon\n                  icon={faQuestion}\n                  style={{}} \n                /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired,\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT': return {\n      ...state,\n      contacts: state.contacts.filter(\n        contact => contact.id !== action.payload\n      )\n    };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [\n          action.payload,\n          ...state.contacts\n        ]\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(\n          contact =>\n            contact.id === action.payload.id\n              ? (contact = action.payload)\n              : contact\n        )\n      }\n    default:\n      return state;\n  }\n}\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action))\n    },\n  };\n\n  async componentDidMount() {\n    const res = await axios\n      .get('https://jsonplaceholder.typicode.com/users')\n    \n    this.setState({ contacts: res.data})\n  };\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSortDown, faSortUp, faTimes, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { Consumer } from '../../context';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false,\n  };\n\n  showOnClick = (e) => {\n    this.setState({\n      showContactInfo: !this.state.showContactInfo\n    });\n  }\n\n  deleteOnClick = async (id, dispatch) => {\n    try {\n      await axios\n        .delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      \n      dispatch({\n        type: \"DELETE_CONTACT\",\n        payload: id\n      });\n    } catch(e) {\n      dispatch({\n        type: \"DELETE_CONTACT\",\n        payload: id\n      });\n    }\n  }\n\n  render() {\n    const { name, email, phone, id } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {\n          value => {\n            const { dispatch } = value;\n            return (\n              <div className=\"card card-body mb-3\">\n                <h4>\n                  {name + \" \"}\n                  <FontAwesomeIcon\n                    icon={showContactInfo ? faSortUp : faSortDown}\n                    onClick={this.showOnClick}\n                    style={{ cursor: \"pointer\" }}\n                  />\n                  <FontAwesomeIcon\n                    icon={faTimes}\n                    onClick={() => this.deleteOnClick(id,dispatch)}\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"red\"\n                    }}\n                  />\n                  <Link to={`contact/edit/${id}`}>\n                    <FontAwesomeIcon\n                      icon={faPencilAlt}\n                      style={{\n                        cursor: \"pointer\",\n                        float: \"right\",\n                        color: \"black\"\n                      }}\n                    />\n                  </Link>\n                </h4>\n                {showContactInfo &&\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>}\n            </div>\n            )\n          }\n        }\n      </Consumer>\n      \n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n}\n\nexport default Contact;","import React, { Component, Fragment } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {\n          value => {\n            const { contacts } = value;\n            return (\n              <Fragment>\n                <h1 className=\"display-4 mb-2\">\n                  <span className=\"text-danger\">Contact</span> List\n                </h1>\n                {contacts.map(contact => (\n                  <Contact\n                    key={contact.id}\n                    contact={contact}\n                  />\n                ))}\n              </Fragment>\n            )\n          }\n        }\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        id={name}\n        className={classnames(\n          \"form-control form-control-lg\",\n          {\n            \"is-invalid\" : error\n          }\n        )}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {\n        error && <div className=\"invalid-feedback\">\n          {error}\n        </div>\n      }\n    </div>\n  )\n}\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text',\n}\n\nexport default TextInputGroup; \n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup'\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {},\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone,\n    };\n\n    const res = await axios\n      .post('https://jsonplaceholder.typicode.com/users/', newContact);\n\n    dispatch({type: 'ADD_CONTACT', payload: res.data});\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value }) \n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return(\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={e => this.onSubmit(dispatch, e)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    value={name}\n                    placeholder=\"Enter Name...\"\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    value={email}\n                    placeholder=\"Enter Email...\"\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    value={phone}\n                    placeholder=\"Enter Phone...\"\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {},\n  }\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    \n    const res = await axios\n      .get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone,\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n    const { id } = this.props.match.params;\n\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const updateContact = {\n      name,\n      email,\n      phone,\n    }\n\n    const res = await axios\n      .put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value }) \n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return(\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={e => this.onSubmit(dispatch, e)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    value={name}\n                    placeholder=\"Enter Name...\"\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    value={email}\n                    placeholder=\"Enter Email...\"\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    value={phone}\n                    placeholder=\"Enter Phone...\"\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact;\n","import React from 'react'\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n\nexport default About;\n","import React from 'react'\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exists</p>\n    </div>\n  )\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch} from \"react-router-dom\"\nimport Test from './components/test/Test';\nimport Header from './components/layout/Header';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport { Provider } from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render(){\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}